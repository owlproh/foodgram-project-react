# Generated by Django 3.2.3 on 2023-03-14 19:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Рецепт в избранном',
                'verbose_name_plural': 'Избранные рецепты',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Введите название ингредиента', max_length=150, verbose_name='Название')),
                ('measurement_unit', models.CharField(help_text='Введите единицу измерения для ингредиента', max_length=10, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='IngredientToRecipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(help_text='Введите количество ингредиента(ов), для данного рецепта', validators=[django.core.validators.MinValueValidator(1, message='Количество ингредиента не может быть нулевым')], verbose_name='Количество ингредиента')),
            ],
            options={
                'verbose_name': 'Ингредиенты в рецепте',
                'verbose_name_plural': 'Соответствие ингредиентов и рецептов',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Добавьте фото к Вашему рецепту', upload_to='recipes/images/', verbose_name='Изображение')),
                ('name', models.CharField(db_index=True, help_text='Введите название блюда', max_length=200, verbose_name='Название')),
                ('text', models.TextField(help_text='Введите описание рецепта', verbose_name='Описание')),
                ('cooking_time', models.PositiveIntegerField(help_text='Введите время приготовления блюда в минутах', validators=[django.core.validators.MinValueValidator(1, message='Время приготовления не может быть меньше 1')], verbose_name='Время приготовления')),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата публикации')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Введите название тега', max_length=150, unique=True, validators=[django.core.validators.RegexValidator(message='Название тега содержит недопустимый символ', regex='^[a-fA-FА-Яа-я0-9]')], verbose_name='Имя тега')),
                ('color', models.CharField(help_text='Введите Hex-code нужного цвета', max_length=7, unique=True, validators=[django.core.validators.RegexValidator(message='Неверный hex-code цвета', regex='^#+[a-fA-F0-9]')], verbose_name='Hex-code цвета')),
                ('slug', models.SlugField(help_text='Введите сокращенние для тега', unique=True, validators=[django.core.validators.RegexValidator(message='Слаг тега содержит недопустимый символ', regex='^[-a-zA-Z0-9_]+$')], verbose_name='slug тега')),
            ],
            options={
                'verbose_name': ('Тег',),
                'verbose_name_plural': 'Теги',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(help_text='Выберите рецепт(ы)', on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to='recipes.recipe', verbose_name='Рецепт')),
            ],
            options={
                'verbose_name': 'Список покупок пользователя',
                'verbose_name_plural': 'Списки покупок пользователей',
                'ordering': ('user',),
            },
        ),
    ]
