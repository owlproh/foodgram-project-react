name: Foodgram workflow

on: [push]

jobs:
  tests:
    name: Automatical testing the project
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r backend/requirements.txt 
  
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Docker_Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub backend
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./backend/
          tags: owlproh/backend:latest

      - name: Push to DockerHub frontend
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./frontend/
          tags: owlproh/frontend:latest

  deploy:
    name: Automatical deploy
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub

    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_YC }}
        username: ${{ secrets.USER_YC }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          cd infra/
          sudo docker pull owlproh/backend:latest
          sudo docker pull owlproh/frontend:latest
          sudo docker-compose stop
          sudo docker-compose rm backend
          rm .env
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker-compose up -d 

  send_message:
    name: Automatical messaging
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Йо! ${{ github.workflow }} говорит, что проект успешно задеплоен!^.^
